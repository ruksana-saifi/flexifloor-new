{{ 'section-contact-form.css' | asset_url | stylesheet_tag }}
{{ 'contact-us.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<div class="color-{{ section.settings.color_scheme }} gradient">

  <div class="contact-breadcrumb page-width">
    {% render 'breadcrumb' %}
  </div>
  <div class="contact-page page-width page-width--narrow section-{{ section.id }}-padding">
    
    {%- if section.settings.heading != blank -%}
      <h2 class="title title-wrapper--no-top-margin inline-richtext{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}">
        {{ section.settings.heading }}
      </h2>
    {%- else -%}
      <h2 class="visually-hidden">{{ 'templates.contact.form.title' | t }}</h2>
    {%- endif -%}
    {%- if section.settings.content != blank -%}
      <div class="contact-content{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}">{{ section.settings.content }}</div>
    {% endif %}
    {%- if section.settings.text != blank -%}
      <div class="contact-text{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}">{{ section.settings.text }}</div>
    {% endif %}
    {%- if section.settings.title != blank -%}
      <h5 class="contact-title{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}">{{ section.settings.title }}</h5>
    {% endif %}
    
    {%- liquid
      assign contact_form_class = 'isolate'
      if settings.animations_reveal_on_scroll
        assign contact_form_class = 'isolate scroll-trigger animate--slide-in'
      endif
    -%}
    {%- form 'contact', id: 'ContactForm', class: contact_form_class -%}
      {%- if form.posted_successfully? -%}
        <h2 class="form-status form-status-list form__message" tabindex="-1" autofocus>
          {% render 'icon-success' %}
          {{ 'templates.contact.form.post_success' | t }}
        </h2>
      {%- elsif form.errors -%}
        <div class="form__message">
          <h2 class="form-status caption-large text-body" role="alert" tabindex="-1" autofocus>
            {% render 'icon-error' %}
            {{ 'templates.contact.form.error_heading' | t }}
          </h2>
        </div>
        <ul class="form-status-list caption-large" role="list">
          <li>
            <a href="#ContactForm-email" class="link">
              {{ form.errors.translated_fields.email | capitalize }}
              {{ form.errors.messages.email }}
            </a>
          </li>
        </ul>
      {%- endif -%}
      <div class="contact__fields">
        <div class="field">
          <input
            class="field__input"
            autocomplete="name"
            type="text"
            id="ContactForm-name"
            name="contact[{{ 'templates.contact.form.name' | t }}]"
            value="{% if form.name %}{{ form.name }}{% elsif customer %}{{ customer.name }}{% endif %}"
            placeholder="{{ 'templates.contact.form.name' | t }}"
            data-contact-name
          >
          <label class="field__label" for="ContactForm-name">{{ 'templates.contact.form.name' | t }}</label>
          <span class="custom-field-err hidden" data-contact-err>* This field is required</span>
        </div>
        <div class="field field--with-error">
          <input
            autocomplete="email"
            type="email"
            id="ContactForm-email"
            class="field__input"
            name="contact[email]"
            spellcheck="false"
            autocapitalize="off"
            value="{% if form.email %}{{ form.email }}{% elsif customer %}{{ customer.email }}{% endif %}"
            aria-required="true"
            {% if form.errors contains 'email' %}
              aria-invalid="true"
              aria-describedby="ContactForm-email-error"
            {% endif %}
            placeholder="{{ 'templates.contact.form.email' | t }}"
            data-contact-email
          >
          <label class="field__label" for="ContactForm-email">
            {{- 'templates.contact.form.email' | t }}
          </label>
          <span class="custom-field-err hidden" data-contact-err>* This field is required</span>
          {%- if form.errors contains 'email' -%}
            <small class="contact__field-error" id="ContactForm-email-error">
              <span class="visually-hidden">{{ 'accessibility.error' | t }}</span>
              <span class="form__message">
                {%- render 'icon-error' -%}
                {{- form.errors.translated_fields.email | capitalize }}
                {{ form.errors.messages.email -}}
              </span>
            </small>
          {%- endif -%}
        </div>
      </div>
    {% comment %}
      <div class="field">
        <input
          type="tel"
          id="ContactForm-phone"
          class="field__input"
          autocomplete="tel"
          name="contact[{{ 'templates.contact.form.phone' | t }}]"
          pattern="[0-9\-]*"
          value="{% if form.phone %}{{ form.phone }}{% elsif customer %}{{ customer.phone }}{% endif %}"
          placeholder="{{ 'templates.contact.form.phone' | t }}"
        >
        <label class="field__label" for="ContactForm-phone">{{ 'templates.contact.form.phone' | t }}</label>
      </div>
      {% endcomment %}
      <div class="field">
        <textarea
          rows="15"
          id="ContactForm-body"
          class="text-area field__input"
          name="contact[{{ 'templates.contact.form.comment' | t }}]"
          placeholder="{{ 'templates.contact.form.comment' | t }}"
          data-contact-msg
        >
          {{- form.body -}}
        </textarea>
        <label class="form__label field__label" for="ContactForm-body">
          {{- 'templates.contact.form.comment' | t -}}
        </label>
        <span class="custom-field-err hidden" data-contact-err>* This field is required</span>
      </div>
      
      {% if section.settings.note != blank %}<div class="form-note-wrap">{{ section.settings.note }}</div>{% endif %}
      
      <div class="contact__button">
        <button type="submit" class="button contact-from-btn disabled" data-contact-submit>
          {{ 'templates.contact.form.send' | t }}
        </button>
      </div>
    {%- endform -%}
  </div>
</div>

<script>
  //form submnit event
  var submitBtn = document.querySelector("[data-contact-submit]") || null;
  var form = document.querySelector("#ContactForm") || null;

  var name1 = document.querySelector("[data-contact-name]") || null;
  var email = document.querySelector("[data-contact-email]") || null;
  var msg = document.querySelector("[data-contact-msg]") || null;

  var pattern = /[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,3}$/;

  setTimeout(function(){
    checkForErr();
  },500);
    
  if(submitBtn){
    submitBtn.addEventListener("click",function(e){
      // console.log(e.currentTarget);
      // console.log("submit",e.target);
      e.preventDefault();
      
      //for name
      if(name1){
        var n = name1.value.trim();
        if(n.length == 0){
          name1.closest(".field").querySelector("[data-contact-err]").classList.remove("hidden");
        }else{
          name1.closest(".field").querySelector("[data-contact-err]").classList.add("hidden");
        }
      }

      //for email
      if(email){
        var em = email.value.trim();
        if(em.length == 0){
          // console.log("len",0);
          email.closest(".field").querySelector("[data-contact-err]").innerText = 'This Field is required *';
          email.closest(".field").querySelector("[data-contact-err]").classList.remove("hidden");
        }else{
          email.closest(".field").querySelector("[data-contact-err]").classList.add("hidden");
          // var pattern = /[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,3}$/;
          // console.log("pattern",email.value.match(pattern));
          if(email.value.match(pattern)){
            email.closest(".field").querySelector("[data-contact-err]").classList.add("hidden");
          }
          else{
            // console.log("null");
            email.closest(".field").querySelector("[data-contact-err]").innerText = 'Enter valid email format';
            email.closest(".field").querySelector("[data-contact-err]").classList.remove("hidden");
          }
        }
      }
      
      //for msg
      if(msg){
        var m = msg.value.trim();
        if(m.length == 0){
          msg.closest(".field").querySelector("[data-contact-err]").classList.remove("hidden");
        }else{
          msg.closest(".field").querySelector("[data-contact-err]").classList.add("hidden");
        }
      }

      let errorWrap = document.querySelectorAll(".custom-field-err:not(.hidden)");
      // console.log("errorWrap",errorWrap);
      if(errorWrap.length == 0) form.submit();
      // return false;
    });
  }

  //input ON KEYUP
  if(name1){
    name1.addEventListener("keyup",function(){
      // console.log("this",this.value);
      var val = this.value.trim();
      if(val.length > 0){
        name1.closest(".field").querySelector("[data-contact-err]").classList.add("hidden");
      }
      else{
        name1.closest(".field").querySelector("[data-contact-err]").classList.remove("hidden");
      }

      checkForErr();
    });
  }

  if(email){
    email.addEventListener("keyup",function(){
      // console.log("this",this.value);
      var val = this.value.trim();
      if(val.length > 0){
        // email.closest(".field").querySelector("[data-contact-err]").classList.add("hidden");
        // if(email.value.match(pattern)){
        //   email.closest(".field").querySelector("[data-contact-err]").classList.add("hidden");
        // }
        // else{
        //   // console.log("null");
        //   email.closest(".field").querySelector("[data-contact-err]").innerText = 'Enter valid email format';
        //   email.closest(".field").querySelector("[data-contact-err]").classList.remove("hidden");
        // }
        email.closest(".field").querySelector("[data-contact-err]").classList.add("hidden");
      }
      else{
        email.closest(".field").querySelector("[data-contact-err]").innerText = 'This Field is required *';
        email.closest(".field").querySelector("[data-contact-err]").classList.remove("hidden");
      }
      
      checkForErr();
    });
  }

  if(msg){
    msg.addEventListener("keyup",function(){
      // console.log("this",this.value);
      var val = this.value.trim();
      if(val.length > 0){
        msg.closest(".field").querySelector("[data-contact-err]").classList.add("hidden");
      }
      else{
        msg.closest(".field").querySelector("[data-contact-err]").classList.remove("hidden");
      }

      checkForErr();
    });
  }

  function checkForErr(){

    let allFilled = true;
    // var submitBtn = document.querySelector("[data-contact-submit]") || null;
    var inputs = document.querySelectorAll("#ContactForm .field__input") || null;
    // console.log("submitBtn",submitBtn);
    if(inputs.length){
        inputs.forEach(input => {
        // console.log("input.length",input.length);
        var val = input.value.trim();
        var errShow = input.closest(".field").querySelector("[data-contact-err]:not(.hidden)");
          //console.log("errShow",errShow);
        if(val.length == 0 || errShow){
          allFilled = false;
          return false;
        }
      });
    }

    if(submitBtn){
      if(allFilled == true){
        //console.log("true --> remove");
        if(submitBtn.classList.contains("disabled")) submitBtn.classList.remove("disabled");
      }else{
        // console.log("false --> add");
        if(!submitBtn.classList.contains("disabled")) submitBtn.classList.add("disabled");
      }
    }
    
  }
</script>


{% schema %}
{
  "name": "t:sections.contact-form.name",
  "tag": "section",
  "class": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "inline_richtext",
      "id": "heading",
      "default": "Contact form",
      "label": "Heading"
    },
    {
      "type": "richtext",
      "id": "content",
      "label": "Content"
    },
    {
      "type": "text",
      "id": "text",
      "label": "Text"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default":"Contact Us"
    },
    {
      "type": "richtext",
      "id": "note",
      "label": "Form Note"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "background-1"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ],
  "presets": [
    {
      "name": "t:sections.contact-form.presets.name"
    }
  ]
}
{% endschema %}
